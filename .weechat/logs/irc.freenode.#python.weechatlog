2015-07-11 10:47:22	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 10:47:22	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 10:47:22	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 10:47:22	--	Channel #python: 1676 nicks (0 ops, 0 voices, 1676 normals)
2015-07-11 10:47:22	***	Buffer Playback...
2015-07-11 10:47:22	dony	[10:27:58] I"m using kivy
2015-07-11 10:47:22	dony	[10:28:02] http://pastebin.com/B5GmxEqR
2015-07-11 10:47:22	infobob	[10:28:02] http://paste.pound-python.org/show/8solM6pNjsLPWgiBEHqb/ (repasted for dony)
2015-07-11 10:47:22	dony	[10:28:09] this is my code part of it
2015-07-11 10:47:22	nedbat	[10:28:17] whorush: I would tackle that parsing problem by using re.split to turn "P1Y1M1DT1" into ["P", "1", "Y", "1", "M", "1", "DT", "1"]
2015-07-11 10:47:22	dony	[10:28:20] its a bit long but you only have to concentrate on the init part
2015-07-11 10:47:22	heftig	[10:28:22] yeryry: nope
2015-07-11 10:47:22	nedbat	[10:29:04] yeryry: names and values always work the same, regardless of mutable or immutable.
2015-07-11 10:47:22	dony	[10:29:04] the variable is an instance of AppState
2015-07-11 10:47:22	whorush	[10:29:35] #nedbat, you're probably right, that's what i was doing.  don't try to be too clever, just write a bunch of code.
2015-07-11 10:47:22	nedbat	[10:30:05] whorush: or at least, "1Y", "1M", "1DT", etc.
2015-07-11 10:47:22	dony	[10:30:26] heftig: can you check out my code or too busy?
2015-07-11 10:47:22	whorush	[10:30:41] #nedbat, i mean that's what i was originally doing.  yeah, you're right. i'll just do that.  thanks!
2015-07-11 10:47:22	yeryry	[10:31:01] Ah, yeah, misread
2015-07-11 10:47:22	heftig	[10:31:57] dony: i don't know kivy
2015-07-11 10:47:22	kichuku	[10:32:11]  am trying to use a program which uploads videos to youtube from linux command line. I am getting the following error https://bpaste.net/show/e548728059d2
2015-07-11 10:47:22	dony	[10:32:12] you don't need to
2015-07-11 10:47:22	dony	[10:32:20] heftig: just check the python bits
2015-07-11 10:47:22	dony	[10:32:24] basically the inits
2015-07-11 10:47:22	whorush	[10:32:34] #nedbat, you know what, as soon as i agreed, i remembered why i wanted a regex.  because i could have text with xs:duration embedded.  so i could have "i tried to do this for P1Y but I still couldn't figure out the regex" and i have to find the duration type in there and handle it.
2015-07-11 10:47:22	dony	[10:32:36] __init__ part but only if oyu want to
2015-07-11 10:47:22	dony	[10:32:42] heftig: ^^
2015-07-11 10:47:22	heftig	[10:32:53] dony: what do you want me to do?
2015-07-11 10:47:22	heftig	[10:33:11] dony: python can do syntax checks for you
2015-07-11 10:47:22	nedbat	[10:33:55] whorush: r"P(\d+(Y|M|DT|S))+"   # maybe?
2015-07-11 10:47:22	nedbat	[10:34:05] whorush: finding them and parsing them can be two different tasks
2015-07-11 10:47:22	dony	[10:34:31] heftig: Yes I know that. If you can check only if the instance is the same for both MainMenu and MenuElt
2015-07-11 10:47:22	heftig	[10:34:53] dony: the instance of what?
2015-07-11 10:47:22	dony	[10:35:16] AppState
2015-07-11 10:47:22	dony	[10:35:26] that is passed to both of the above classes
2015-07-11 10:47:22	whorush	[10:35:28] nedbat: yeah, i can make finding and parsing different, i actually already have code to parse, using partition.  if my regex obviates that, i can kill it, but i need a regex to find these things embedded in strings.
2015-07-11 10:47:22	heftig	[10:36:15] dony: who knows what ObjectProperty does
2015-07-11 10:47:22	whorush	[10:36:50] nedbat: that doesn't work because if i have just one year, P1Y, i don't need T, but if i have one year and one hour and 1 second, i have P1YT1H1S
2015-07-11 10:47:22	dony	[10:37:12] heftig: I see then I guess the python code is okay its the kivy part that I have to check
2015-07-11 10:47:22	dony	[10:37:14] thank  you heftig
2015-07-11 10:47:22	nedbat	[10:37:19] whorush: oh, i misunderstood the T
2015-07-11 10:47:22	nedbat	[10:38:08] whorush: r"P(\d+(Y|M|D))?(T(\d+(H|M|S))+)?"   # maybe?
2015-07-11 10:47:22	nedbat	[10:38:15] whorush: that's getting a bit baroque, but....
2015-07-11 10:47:22	whorush	[10:38:27] nedbat: yeah, that's why i was liking this isaac asimov example they give on the regex tutorial.
2015-07-11 10:47:22	idonthaveanickna	[10:38:41] yeryry: i was not passing NULL when new values were added. silly me. too early.
2015-07-11 10:47:22	whorush	[10:38:41] nedbat: yeah, but it can have hours AND seconds
2015-07-11 10:47:22	nedbat	[10:38:55] whorush: the last + there handles that.
2015-07-11 10:47:22	whorush	[10:39:20] nedbat: hmmm
2015-07-11 10:47:22	nedbat	[10:39:29] whorush: whatever you do, write some tests :)
2015-07-11 10:47:22	nedbat	[10:39:55] whorush: also, you could just do a crude match to find them, then let the parser deal with false positives
2015-07-11 10:47:22	whorush	[10:40:09] nedbat: yeah
2015-07-11 10:47:22	nedbat	[10:40:10] whorush: r"P[\dYMDTHMS]+"
2015-07-11 10:47:22	whorush	[10:40:57] nedbat, thanks a lot!  i'm going to give it another go
2015-07-11 10:47:22	moses	[10:45:18] what does python return when you fetch a url using urllib2?
2015-07-11 10:47:22	toothrot	[10:45:27] i have a list of struct-ish objects (each item is like `Thing { block; }`) that i'm parsing from a file using pyparsing... is it better for my parse expression to just parse an individual item and run searchString, or for my parse expression to wrap the items in a delimitedList ?
2015-07-11 10:47:22	***	Playback Complete.
2015-07-11 10:47:25	-->	bullicon (~textual@90.194.189.12) has joined #python
2015-07-11 10:47:41	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 10:47:46	-->	dray3 (~daaray@cpe-75-189-135-132.nc.res.rr.com) has joined #python
2015-07-11 10:48:11	<--	Kassad (~kassad@bitnet.me) has quit (Remote host closed the connection)
2015-07-11 10:48:49	<--	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has quit (Ping timeout: 246 seconds)
2015-07-11 10:48:51	-->	adeor (~adeor@2001:a61:77:1301:e835:4ed1:1385:6079) has joined #python
2015-07-11 10:50:04	-->	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has joined #python
2015-07-11 10:51:30	<--	axoneme074 (727dada6@gateway/web/freenode/ip.114.125.173.166) has quit (Ping timeout: 246 seconds)
2015-07-11 10:51:44	john_doe_jr	I need to specify a default file location using arpgarse…does anyone know if that is possible?
2015-07-11 10:51:52	-->	Bayesian_Coffee (~seth@2601:141:1:3fd3:21c:b3ff:fec1:718e) has joined #python
2015-07-11 10:51:53	<--	subopt (~eholbroo@inet-hqmc04-o.oracle.com) has quit (Remote host closed the connection)
2015-07-11 10:52:24	-->	Frodo1337 (~Ninja3047@2601:192:4202:f9dc:6680:99ff:fe3b:3fc0) has joined #python
2015-07-11 10:52:27	moses	anyone have the urllib2.HTTPError: HTTP Error 403: Forbidden
2015-07-11 10:52:31	moses	error before?
2015-07-11 10:52:35	-->	subopt (~eholbroo@inet-hqmc04-o.oracle.com) has joined #python
2015-07-11 10:52:53	<--	treefrob (~huhu@p508B60D1.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2015-07-11 10:52:55	<--	Ninja3047 (~Ninja3047@c-50-187-66-145.hsd1.ma.comcast.net) has quit (Ping timeout: 256 seconds)
2015-07-11 10:52:58	-->	econdudeawesome (~ogre@cpe-65-186-223-70.insight.res.rr.com) has joined #python
2015-07-11 10:53:10	-->	Wocket (~jhall@h120.8.186.173.ip.windstream.net) has joined #python
2015-07-11 10:53:33	econdudeawesome	I made a mistake. Somehow I made Debian use the Anaconda python distribution instead of the normal version Jessie ships with, and I have no idea how to switch it back. Anyone have any idea?
2015-07-11 10:53:43	john_doe_jr	moses: I think you may need to install the requests module
2015-07-11 10:53:45	<--	Frodo1337 (~Ninja3047@2601:192:4202:f9dc:6680:99ff:fe3b:3fc0) has quit (Client Quit)
2015-07-11 10:54:03	-->	Ninja3047 (~Ninja3047@2601:192:4202:f9dc:6680:99ff:fe3b:3fc0) has joined #python
2015-07-11 10:54:04	moses	on my computer?
2015-07-11 10:54:16	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined #python
2015-07-11 10:54:57	moses	http://pastebin.com/ueMWCHTf
2015-07-11 10:54:59	infobob	http://paste.pound-python.org/show/xMN5OOlUpklVTDyrYNJr/ (repasted for moses)
2015-07-11 10:55:00	cwillu	econdudeawesome, #debian is probably going to be more helpful
2015-07-11 10:55:38	moses	http://pastebin.com/MYbbtwX5
2015-07-11 10:55:38	infobob	http://paste.pound-python.org/show/YXI7l78nuBSLiEcQ82of/ (repasted for moses)
2015-07-11 10:55:41	moses	first one is error second is code
2015-07-11 10:55:49	<--	SkyRocknRoll (~SkyRocknR@unaffiliated/skyrocknroll) has quit (Ping timeout: 246 seconds)
2015-07-11 10:56:05	-->	sailorswift (~sailorswi@96-42-144-160.dhcp.trcy.mi.charter.com) has joined #python
2015-07-11 10:56:11	<--	FRidh (~FRidh@c-82-192-242-116.customer.ggaweb.ch) has quit (Quit: Konversation terminated!)
2015-07-11 10:56:22	<--	econdudeawesome (~ogre@cpe-65-186-223-70.insight.res.rr.com) has quit (Client Quit)
2015-07-11 10:57:40	moses	I think I need to add headers so google allows me to bot their webpages
2015-07-11 10:58:06	-->	shantanoo (~shantanoo@p3m/member/shantanoo) has joined #python
2015-07-11 10:58:17	-->	whytraytofly (~Thunderbi@dslb-094-223-010-126.094.223.pools.vodafone-ip.de) has joined #python
2015-07-11 10:59:41	<--	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-07-11 10:59:41	-->	Gouzounakis (~Gouzounak@78-161-249.adsl.cyta.gr) has joined #python
2015-07-11 10:59:41	-->	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has joined #python
2015-07-11 10:59:56	<--	linkedinyou (~kvirc@unaffiliated/linkedinyou) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2015-07-11 11:00:01	nedbat	moses: google is not going to allow you to bot their webpages
2015-07-11 11:00:24	<--	pld (~pld@unaffiliated/pld) has quit (Ping timeout: 255 seconds)
2015-07-11 11:00:38	<--	mkster (~mkster@i577B7E62.versanet.de) has quit (Read error: Connection reset by peer)
2015-07-11 11:01:01	moses	:/ that ruins my program then! What if i add specific headers?
2015-07-11 11:01:05	-->	mkster (~mkster@i577B7E62.versanet.de) has joined #python
2015-07-11 11:01:30	-->	Xenoth (~Xenoth@104-56-166-31.lightspeed.cicril.sbcglobal.net) has joined #python
2015-07-11 11:01:49	--	whytraytofly is now known as whytrytofly
2015-07-11 11:02:10	nedbat	moses: i don't know the details, but think about it: google's value is in their search results.  They will put a lot of effort into making it very very hard to get that data with a program.
2015-07-11 11:02:27	-->	GentileBen (~BenOrigin@cpc70137-lutn12-2-0-cust564.9-3.cable.virginm.net) has joined #python
2015-07-11 11:03:34	-->	hubutm20 (~hubutm20@79.114.18.255) has joined #python
2015-07-11 11:03:39	<--	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has quit (Client Quit)
2015-07-11 11:03:51	<--	Bayesian_Coffee (~seth@2601:141:1:3fd3:21c:b3ff:fec1:718e) has left #python
2015-07-11 11:04:14	<--	mnemonicj (~quemarrop@118.233.255.24) has quit (Ping timeout: 265 seconds)
2015-07-11 11:04:15	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #python
2015-07-11 11:04:23	-->	atomtm (~androirc@ppp-2-84-229-1.home.otenet.gr) has joined #python
2015-07-11 11:04:53	<--	Squarepy (~Squarepy_@unaffiliated/squarepy) has quit (Quit: Leaving)
2015-07-11 11:04:57	moses	but im using googles search results to access the data
2015-07-11 11:04:59	-->	wicope (~wicope@31.Red-81-36-192.dynamicIP.rima-tde.net) has joined #python
2015-07-11 11:05:02	-->	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has joined #python
2015-07-11 11:05:17	cwillu	moses, if you're more specific, you might get more useful responses
2015-07-11 11:05:20	nedbat	moses: sorry, i should have said, their value is in the ads on the search results.
2015-07-11 11:05:26	moses	ah
2015-07-11 11:05:29	--	irc: disconnected from server
2015-07-11 11:06:01	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 11:06:01	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 11:06:01	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 11:06:01	--	Channel #python: 1683 nicks (0 ops, 0 voices, 1683 normals)
2015-07-11 11:06:01	***	Buffer Playback...
2015-07-11 11:06:01	cwillu	[11:05:33] well, their value is the search results
2015-07-11 11:06:01	cwillu	[11:05:38] the exchange is that you look at ads
2015-07-11 11:06:01	shantanoo	[11:05:40] moses: i would suggest using duckduckgo instead of google
2015-07-11 11:06:01	***	Playback Complete.
2015-07-11 11:06:02	nedbat	moses: you can try to get the results with a program, and it might work, but don't be surprised if it stops working.
2015-07-11 11:06:05	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 11:06:21	WeiJunLi	shantanoo: scraping data using ddg is against their terms, I guess.
2015-07-11 11:06:25	-->	happy-dude (uid62780@gateway/web/irccloud.com/x-zbqidsybhnqofxxd) has joined #python
2015-07-11 11:06:32	-->	xxmel0nxx (~xxmel0nxx@201.130.157.54.dsl.dyn.telnor.net) has joined #python
2015-07-11 11:06:41	<--	glosoli (~textual@unaffiliated/glosoli) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-07-11 11:06:49	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Read error: Connection reset by peer)
2015-07-11 11:07:24	<--	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has quit (Client Quit)
2015-07-11 11:07:27	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #python
2015-07-11 11:07:36	shantanoo	WeiJunLi: i suppose no one will allow scrapping existing data...wondering since ddg code is open-source, one can deploy it and they use the data...
2015-07-11 11:07:38	<--	atomtm (~androirc@ppp-2-84-229-1.home.otenet.gr) has quit (Read error: Connection reset by peer)
2015-07-11 11:07:46	<--	john_doe_jr (~Adium@209.33.40.64) has quit (Quit: Leaving.)
2015-07-11 11:07:49	-->	adamholmberg (~adamholmb@216.229.21.45) has joined #python
2015-07-11 11:08:00	moses	this is stupid, we cant write code to utilize a search engine...
2015-07-11 11:08:03	<--	dray3 (~daaray@cpe-75-189-135-132.nc.res.rr.com) has quit (Ping timeout: 255 seconds)
2015-07-11 11:08:11	<--	Sourg (~Sourg@HSI-KBW-095-208-253-019.hsi5.kabel-badenwuerttemberg.de) has quit (Read error: Connection reset by peer)
2015-07-11 11:08:23	-->	jangdonggun (~GunGunGun@42.113.157.196) has joined #python
2015-07-11 11:08:43	-->	xvx (~xvx@83.137.251.72) has joined #python
2015-07-11 11:08:54	jangdonggun	Hi everybody, can I make a local Socks proxy using Python ?
2015-07-11 11:09:16	jangdonggun	I already knew how to make HTTP/HTTPS proxy with Python, but Socks..
2015-07-11 11:09:28	-->	mjansen (~mjansen@unaffiliated/mjansen) has joined #python
2015-07-11 11:09:59	<--	mnemonicj (~quemarrop@118.233.255.24) has quit (Ping timeout: 256 seconds)
2015-07-11 11:10:04	shantanoo	jangdonggun: something like http://sourceforge.net/projects/pysocks ?
2015-07-11 11:10:09	-->	SkyRocknRoll (~SkyRocknR@unaffiliated/skyrocknroll) has joined #python
2015-07-11 11:10:22	WeiJunLi	shantanoo: I wonder if their officials apis won't do what moses needs.
2015-07-11 11:10:35	-->	mnemonicj (~quemarrop@118.233.255.24) has joined #python
2015-07-11 11:10:41	cwillu	moses, again, can you be more specific what you're trying to do?
2015-07-11 11:10:41	-->	Sourg (~Sourg@HSI-KBW-095-208-253-019.hsi5.kabel-badenwuerttemberg.de) has joined #python
2015-07-11 11:10:41	nedbat	moses: google has a few apis to get search results.
2015-07-11 11:10:43	<--	devdazed (~russ_nyc@cpe-158-222-243-74.nyc.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-07-11 11:10:50	-->	glosoli (~textual@unaffiliated/glosoli) has joined #python
2015-07-11 11:10:58	jangdonggun	shantanoo: Seem not what I want, that is not a Socks server
2015-07-11 11:10:59	cwillu	they cost money at high volume
2015-07-11 11:11:15	cwillu	but it's something like above 1000 requests or so
2015-07-11 11:11:28	shantanoo	WeiJunLi: don't know what moses is looking for as i have not joined the channel...
2015-07-11 11:11:35	cwillu	jangdonggun, twisted has a socks client and server
2015-07-11 11:12:00	nedbat	shantanoo: we don't know what moses is looking for because moses hasn't told us.
2015-07-11 11:12:05	moses	http://pastebin.com/MYbbtwX5
2015-07-11 11:12:08	infobob	http://paste.pound-python.org/show/YXI7l78nuBSLiEcQ82of/ (repasted for moses)
2015-07-11 11:12:11	moses	heres my code
2015-07-11 11:12:11	shantanoo	jangdonggun: according to it, it says 'PySocks - a platform independent SOCKS proxy written in Python'. are you looking for socks client or socks server?
2015-07-11 11:12:51	-->	Audioburn (~not_mike@unaffiliated/not-mike/x-4399907) has joined #python
2015-07-11 11:12:51	moses	I dont know how to use api's yet :/
2015-07-11 11:12:57	moses	I dont even know what they are :/
2015-07-11 11:13:00	<--	Audioburn (~not_mike@unaffiliated/not-mike/x-4399907) has quit (Max SendQ exceeded)
2015-07-11 11:13:07	cwillu	moses, every time you call a method you didn't define yourself, you're using an api
2015-07-11 11:13:14	shantanoo	WeiJunLi: i suppose scrapping of the search results is not allowed
2015-07-11 11:13:21	<--	glosoli (~textual@unaffiliated/glosoli) has quit (Client Quit)
2015-07-11 11:13:24	-->	Bozza_ (~Bozza@unaffiliated/bozza) has joined #python
2015-07-11 11:13:28	-->	Audioburn (~not_mike@unaffiliated/not-mike/x-4399907) has joined #python
2015-07-11 11:13:39	shantanoo	but since moses is trying to get the files from the respective urls, it should be fine. IMO.
2015-07-11 11:13:41	<--	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has quit (Quit: Leaving.)
2015-07-11 11:13:44	jangdonggun	shantanoo: I'm search for a way to make socks server, not client :)
2015-07-11 11:14:16	cwillu	jangdonggun, again, twisted has a socks client and server
2015-07-11 11:14:31	cwillu	https://twistedmatrix.com/documents/current/api/twisted.protocols.socks.SOCKSv4.html
2015-07-11 11:14:41	jangdonggun	shantanoo: A socks server that user can set Socksv5 to 127.0.0.1:1080 in Firefox and surf the web
2015-07-11 11:14:46	-->	small-wolf (~g@c-76-126-208-151.hsd1.ca.comcast.net) has joined #python
2015-07-11 11:14:51	shantanoo	moses: iiuc, you want to search for some keyword and from the result you want to download the files like pdf, mp3, epub etc. right?
2015-07-11 11:15:16	shantanoo	+1 for cwillu
2015-07-11 11:15:17	<--	asbjxrn (~asbjxrn@bb115-66-239-222.singnet.com.sg) has quit (Ping timeout: 240 seconds)
2015-07-11 11:15:19	jangdonggun	Thank cwillu
2015-07-11 11:15:28	<--	buffal0 (~buffal0@gateway/vpn/privateinternetaccess/buffal0) has quit (Quit: quit)
2015-07-11 11:15:45	shantanoo	moses: may i suggest https://api.duckduckgo.com/api
2015-07-11 11:15:45	moses	the page will display different download links, I want to be able to choose from them and download one
2015-07-11 11:15:47	-->	buffal0 (~buffal0@46.166.190.166) has joined #python
2015-07-11 11:15:57	<--	Bozza (~Bozza@unaffiliated/bozza) has quit (Ping timeout: 256 seconds)
2015-07-11 11:16:00	<--	khando (~Matt@NW-ESR1-72-49-110-170.fuse.net) has quit (Ping timeout: 244 seconds)
2015-07-11 11:16:24	moses	so api is essentially the new word for library?
2015-07-11 11:16:46	cwillu	it's a rather old word
2015-07-11 11:17:03	-->	rippa (~rippa@80.92.13.22) has joined #python
2015-07-11 11:17:15	-->	axoneme074 (727dada6@gateway/web/freenode/ip.114.125.173.166) has joined #python
2015-07-11 11:17:18	-->	asbjxrn (~asbjxrn@bb115-66-239-222.singnet.com.sg) has joined #python
2015-07-11 11:17:18	nedbat	moses: Application Programming Interface
2015-07-11 11:17:27	jangdonggun	Hi shantanoo and cwille, I found this Socks Server, it looks good too like Twisted!: https://github.com/ziozzang/filtered-socks5-proxy
2015-07-11 11:17:39	jangdonggun	Seem this is what I really want
2015-07-11 11:17:44	--	irc: disconnected from server
2015-07-11 13:07:42	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 13:07:42	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 13:07:42	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 13:07:43	--	Channel #python: 1698 nicks (0 ops, 0 voices, 1698 normals)
2015-07-11 13:07:43	***	Buffer Playback...
2015-07-11 13:07:43	inspiron	[12:23:06] that has built in debugging and code completion etc...
2015-07-11 13:07:43	Berra	[12:23:32] inspiron: Install Vim. Installed the plugins you need. Never ponder about what editor to use ever again.
2015-07-11 13:07:43	Polytonic	[12:23:36] inspiron, most text editors have packages that enable debugging/code completion, etc.
2015-07-11 13:07:43	anddam	[12:23:38] inspiron: do you have an actual need or is it a quest for Holy Graal?
2015-07-11 13:07:43	Polytonic	[12:23:47] inspiron, that being said, can we please not ignite another editor war in here?
2015-07-11 13:07:43	The-Compiler	[12:24:26] Berra: I disagree - it says "the key foobar was not found" or "you used a string index for a list"
2015-07-11 13:07:43	anddam	[12:24:28] I personally find that a text editor is fine enough, debugging is done with ipdb
2015-07-11 13:07:43	Berra	[12:25:24] The-Compiler: But the user would be happier if it said: "Was not able to decode from from json response".
2015-07-11 13:07:43	Berra	[12:25:36] woops on words
2015-07-11 13:07:43	The-Compiler	[12:27:09] Berra: except that wouldn't tell them *why*
2015-07-11 13:07:43	Berra	[12:28:06] The-Compiler: It's complicated to write error handling for experienced users AND novice users.
2015-07-11 13:07:43	Berra	[12:28:33] Me and you would just prefer the stacktrace and pythons own exception.
2015-07-11 13:07:43	Berra	[12:28:51] But a descriptive exception might be better for others.
2015-07-11 13:07:43	Jordy	[12:29:03] how can I use the alt+0173 character in python?
2015-07-11 13:07:43	Berra	[12:29:03] Anyway, for now I am making away with my checks and letting python catch anything.
2015-07-11 13:07:43	Berra	[12:29:40] Jordy:  https://docs.python.org/3/howto/unicode.html
2015-07-11 13:07:43	Jordy	[12:31:14] I know that page.. I just don't know if the unicode code alt+0173 is the same as chr(0173)?
2015-07-11 13:07:43	Berra	[12:31:29] What character is it then?
2015-07-11 13:07:43	Jordy	[12:31:36] invisible character
2015-07-11 13:07:43	Berra	[12:31:43] There are many invisible characters
2015-07-11 13:07:43	Berra	[12:31:52] Find a unicode replacement otherwise
2015-07-11 13:07:43	Berra	[12:32:12] http://www.fileformat.info/info/unicode/char/2063/index.htm
2015-07-11 13:07:43	Berra	[12:32:46] http://www.fileformat.info/info/unicode/char/0020/index.htm
2015-07-11 13:07:43	Berra	[12:32:47] Etc etc
2015-07-11 13:07:43	Jordy	[12:35:29] wow thank you
2015-07-11 13:07:43	KirkMcDonald	[12:36:48] I am pretty sure "alt+0173" is in decimal, and corresponds to U+00AD.
2015-07-11 13:07:43	Jordy	[12:37:08] Thank you!
2015-07-11 13:07:43	Jordy	[12:37:25] Very much appreciated :)
2015-07-11 13:07:43	drazisil	[12:48:54] how do I convert 0.99999601 to x% in python?
2015-07-11 13:07:43	pyCasso	[12:49:03] how do I append the list from allfiles into the newlist?
2015-07-11 13:07:43	pyCasso	[12:49:32] drazisil: are you trying to round up or down or what?
2015-07-11 13:07:43	drazisil	[12:52:06] pyCasso: um, round down and then convert to percent. The rounding part is ok, just not sure on the convert. Is there a method for that?
2015-07-11 13:07:43	deitario1	[12:52:10] What's the simplest way to match \b but excepting apostrophes? (I'm trying to broaden the scope of word delimiters an upcase-only version of str.title() in one of my codebases and \b seems to be what str.title() uses but it results in things like "Don'T")
2015-07-11 13:07:43	Berra	[12:53:37] drazisil: '{:04.2f}%'.format(0.995*100)
2015-07-11 13:07:43	deitario1	[12:53:45] (That is, both str.title() and regexp replacement using \b treat apostrophes as word boundaries, causing contractions to be mis-capitalized)
2015-07-11 13:07:43	rindolf	[12:59:39] Hi all.
2015-07-11 13:07:43	dony	[13:00:16] hi rindolf
2015-07-11 13:07:43	rindolf	[13:00:43] Porting from Python 2.x to Python 3.x seems like such a pain - it appears many standard library modules were removed.
2015-07-11 13:07:43	rindolf	[13:00:58] dony: hi, how are you?
2015-07-11 13:07:43	drazisil	[13:01:09] Berra: thanks. I think I need to work on my rounding though, it's coming out as 100.00
2015-07-11 13:07:43	dw	[13:01:13] rindolf: many were renamed, but yes quite a few really old ones were removed
2015-07-11 13:07:43	rindolf	[13:01:39] dw: OK.
2015-07-11 13:07:43	dony	[13:01:41] I am good rindolf thank you
2015-07-11 13:07:43	rindolf	[13:01:48] dony: nice.
2015-07-11 13:07:43	The-Compiler	[13:04:43] rindolf: what are you missing?
2015-07-11 13:07:43	rindolf	[13:05:22] The-Compiler: right now I'm missing "formatter" and htmllib.HTMLParser
2015-07-11 13:07:43	rindolf	[13:05:43] The-Compiler: PySolFC is using those in one place.
2015-07-11 13:07:43	The-Compiler	[13:06:12] hm, formatter seems to be there but deprecated since 3.4 and removed in 3.6
2015-07-11 13:07:43	The-Compiler	[13:07:00] there's html.parser.HTMLParser but I don't know if that's the same as htmllib.HTMLParser
2015-07-11 13:07:43	The-Compiler	[13:07:11] you should probably use lxml.html to parse HTML anyways
2015-07-11 13:07:43	***	Playback Complete.
2015-07-11 13:07:43	-->	asbjxrn (~asbjxrn@bb115-66-239-222.singnet.com.sg) has joined #python
2015-07-11 13:07:55	<--	fstd (~fstd@unaffiliated/fisted) has quit (Remote host closed the connection)
2015-07-11 13:08:00	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 13:09:28	-->	notpratheek (~shakuni@unaffiliated/segfault/x-4758594) has joined #python
2015-07-11 13:09:56	<--	notpratheek (~shakuni@unaffiliated/segfault/x-4758594) has left #python
2015-07-11 13:09:59	<--	Hink (~Hink@146-115-61-133.c3-0.frm-ubr1.sbo-frm.ma.cable.rcn.com) has quit (Quit: Leaving)
2015-07-11 13:10:13	-->	groton (~groton@unaffiliated/groton) has joined #python
2015-07-11 13:10:19	-->	Hink (~Hink@146-115-61-133.c3-0.frm-ubr1.sbo-frm.ma.cable.rcn.com) has joined #python
2015-07-11 13:10:28	-->	engimo (alice@hardch.at) has joined #python
2015-07-11 13:11:21	--	irc: disconnected from server
2015-07-11 13:11:33	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 13:11:33	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 13:11:33	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 13:11:33	--	Channel #python: 1700 nicks (0 ops, 0 voices, 1700 normals)
2015-07-11 13:11:52	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 13:13:08	rindolf	The-Compiler: ok.
2015-07-11 13:13:09	<--	vocodork_ (~vocoder@d54C4AD1B.access.telenet.be) has quit (Ping timeout: 255 seconds)
2015-07-11 13:13:46	<--	elb0w (~elb0w@pool-72-68-72-63.nwrknj.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2015-07-11 13:14:31	-->	vocodork_ (~vocoder@d54C4AD1B.access.telenet.be) has joined #python
2015-07-11 13:15:58	-->	piedmont (~cakeslam@pdpc/supporter/student/bdotson) has joined #python
2015-07-11 13:16:05	<--	vocodork (~vocoder@d54C4AD1B.access.telenet.be) has quit (Ping timeout: 256 seconds)
2015-07-11 13:16:43	-->	theWhisperIn (~quassel@24.138.236.53) has joined #python
2015-07-11 13:16:45	<--	piedmont (~cakeslam@pdpc/supporter/student/bdotson) has left #python
2015-07-11 13:16:48	<--	mjansen (~mjansen@unaffiliated/mjansen) has quit (Quit: Konversation terminated!)
2015-07-11 13:16:54	theWhisperIn	hi
2015-07-11 13:17:18	-->	cakeslam (~cakeslam@pdpc/supporter/student/bdotson) has joined #python
2015-07-11 13:17:30	-->	starter (~zahra@2.178.126.158) has joined #python
2015-07-11 13:17:32	-->	vocodork (~vocoder@d54C4AD1B.access.telenet.be) has joined #python
2015-07-11 13:17:47	<--	ricardobarbosams (~bitchx@177.74.129.26) has quit (Ping timeout: 256 seconds)
2015-07-11 13:18:16	<--	SkyRocknRoll (~SkyRocknR@unaffiliated/skyrocknroll) has quit (Remote host closed the connection)
2015-07-11 13:18:58	<--	vocodork_ (~vocoder@d54C4AD1B.access.telenet.be) has quit (Ping timeout: 244 seconds)
2015-07-11 13:19:09	-->	vocodork_ (~vocoder@d54C4AD1B.access.telenet.be) has joined #python
2015-07-11 13:19:25	<--	kirotawa (~kirotawa@177.205.183.186.dynamic.adsl.gvt.net.br) has quit (Quit: WeeChat 0.4.2)
2015-07-11 13:19:44	-->	xxneolithicxx (~xxneolith@c-71-235-111-216.hsd1.ct.comcast.net) has joined #python
2015-07-11 13:19:56	<--	xxneolithicxx (~xxneolith@c-71-235-111-216.hsd1.ct.comcast.net) has quit (Max SendQ exceeded)
2015-07-11 13:20:17	<--	s00pcan (~chris@209.197.20.203) has quit (Ping timeout: 240 seconds)
2015-07-11 13:21:42	<--	vocodork (~vocoder@d54C4AD1B.access.telenet.be) has quit (Ping timeout: 255 seconds)
2015-07-11 13:22:21	<--	Deepfriedice (~Deepfried@CPE-1-121-157-70.qwl9.woo.bigpond.net.au) has quit (Quit: Leaving)
2015-07-11 13:22:27	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined #python
2015-07-11 13:22:33	-->	vocodork (~vocoder@d54C4AD1B.access.telenet.be) has joined #python
2015-07-11 13:22:33	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #python
2015-07-11 13:23:06	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2015-07-11 13:23:18	<--	vocodork_ (~vocoder@d54C4AD1B.access.telenet.be) has quit (Ping timeout: 240 seconds)
2015-07-11 13:24:12	<--	NeverDie (~NeverDie@cpe-74-72-21-199.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-07-11 13:26:34	Guest22922	do logs that look like https://github.com/jeff1evesque/machine-learning/issues/1997#issuecomment-120648315 ok?
2015-07-11 13:26:36	Guest22922	i mean - [Sat Jul 11 17:47:19 UTC 2015] flask server starting
2015-07-11 13:26:37	<--	razvanc87 (~razvanc87@79.97.80.96) has quit (Quit: Leaving)
2015-07-11 13:26:40	Guest22922	or can it be organized better, so it can be easily parsed?
2015-07-11 13:27:08	-->	markovh (zncuser@unaffiliated/markovh) has joined #python
2015-07-11 13:27:24	Guest22922	maybe like 2015-07-11:17:47:19-UTC
2015-07-11 13:27:27	Guest22922	or something like that
2015-07-11 13:27:32	-->	yonatan (~WHAT@unaffiliated/cached) has joined #python
2015-07-11 13:27:36	-->	razvanc87 (~razvanc87@79.97.80.96) has joined #python
2015-07-11 13:27:37	Guest22922	does it matter?
2015-07-11 13:27:53	-->	xxneolithicxx (~xxneolith@c-71-235-111-216.hsd1.ct.comcast.net) has joined #python
2015-07-11 13:28:49	<--	Miblo (~matt@109.224.167.27) has quit (Quit: WeeChat 1.2)
2015-07-11 13:29:45	<--	Drevkevac (~Stormer97@cpe-66-57-179-147.sc.res.rr.com) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-07-11 13:30:00	yonatan	Is there a reason i can't find pypy3 in the ubuntu repositories other than me being an idiot?
2015-07-11 13:30:19	-->	Miblo (~matt@109.224.167.27) has joined #python
2015-07-11 13:30:41	ChrisWarrick	yonatan: Who said it’s there?
2015-07-11 13:30:57	yonatan	ChrisWarrick: No one did. That would be a valid reason for not finding it.
2015-07-11 13:31:04	yonatan	ChrisWarrick: Any idea why it's not?
2015-07-11 13:31:10	igenius4	how does md5 hashing work?
2015-07-11 13:31:21	ChrisWarrick	igenius4: maths
2015-07-11 13:31:30	yonatan	igenius4: On a bitwise-level, or in terms of what it's useful for?
2015-07-11 13:31:36	-->	dondon (~dondon@unaffiliated/dondon) has joined #python
2015-07-11 13:31:39	-->	yeticry (~yeticry@223.240.228.19) has joined #python
2015-07-11 13:31:42	ChrisWarrick	igenius4: (PS. don’t use md5 or sha1 for passwords)
2015-07-11 13:31:44	igenius4	it seems that no matter how long the string is, i get the same length of hash...but i am passing this giant string of XML to amazon, and it's converted to a hash of 128 bits
2015-07-11 13:32:04	donkdonk	igenius4: that is how a md5 hash works.
2015-07-11 13:32:04	yonatan	igenius4: Yep. It will always give you the same level string. It's not a compression, it's a hash.
2015-07-11 13:32:06	igenius4	so how does amazon take that 128 bits and turn it back into like hundreds of bytes?
2015-07-11 13:32:33	B1nny	they don't
2015-07-11 13:32:42	yonatan	igenius4: It doesn't. Probably, since the hash is consistent (a fixed string ALWAYS gives you the same hash), it's using the hash to lookup the entirety of the string in some database.
2015-07-11 13:32:50	B1nny	a hash is like a second 'representation' of a string or file
2015-07-11 13:33:05	<--	jlf (~user@pdpc/supporter/active/jlf) has quit (Ping timeout: 256 seconds)
2015-07-11 13:33:10	ChrisWarrick	igenius4: https://en.wikipedia.org/wiki/Cryptographic_hash_function “impossible to invert”
2015-07-11 13:33:10	yonatan	But does Amazon really use md5?
2015-07-11 13:33:17	dondon	is there a good way to shortern this if statement? https://bpaste.net/show/31ae9659a6bb
2015-07-11 13:33:18	<--	wprice (~wmprice@c-24-2-146-107.hsd1.nh.comcast.net) has quit (Quit: wprice)
2015-07-11 13:33:22	igenius4	i'm passing a bunch of XML data to amazon via a hash it seems....so you're saying amazon cannot take the hash and turn it back into XML?
2015-07-11 13:33:32	yonatan	Correct.
2015-07-11 13:33:46	dondon	it seems redundant to type out _entry['type'] twice
2015-07-11 13:33:50	ChrisWarrick	yonatan: pypy3 is experimental and not fully functional afaik.  Also, packages don’t grow on trees, maybe nobody bothered to create one yet
2015-07-11 13:33:52	-->	Saturn812 (~Saturn812@128-69-6-128.broadband.corbina.ru) has joined #python
2015-07-11 13:33:54	-->	s00pcan (~chris@209.197.20.204) has joined #python
2015-07-11 13:33:57	igenius4	then how is amazon getting the XML data...i don't see how they're getting it because the URL doesn't contain the data
2015-07-11 13:34:08	drazisil	yonatan: looks like it's only in trusty http://packages.ubuntu.com/source/trusty/pypy
2015-07-11 13:34:10	ChrisWarrick	dondon: elif entry_type not in ('positional', 'keyword'):
2015-07-11 13:34:25	donkdonk	igenius4: what makes you think amazon is getting data?
2015-07-11 13:34:32	yonatan	drazisil: that's the python2 version i think
2015-07-11 13:34:43	<--	razvanc87 (~razvanc87@79.97.80.96) has quit (Quit: Leaving)
2015-07-11 13:34:48	igenius4	they are responding to the data i send them
2015-07-11 13:34:56	etbr	hey guys, I have an if statement that isn't working properly.  any suggestions?  :  if "media" in str(item.flask).lower() or "yp" in str(item.flask).lower():
2015-07-11 13:35:03	igenius4	it looks like the data is getting to them via the hash of the data
2015-07-11 13:35:11	etbr	trying to check if the string "media" or "yp" is in a certain string
2015-07-11 13:35:17	<--	WalkerXX (~WalkerX@89-72-215-38.dynamic.chello.pl) has quit (Quit: Leaving)
2015-07-11 13:35:21	<--	m1nish (~m1nish@1.186.38.34) has quit (Ping timeout: 256 seconds)
2015-07-11 13:35:23	nopf	igenius4: this is not possible. they already have the data or the hash is only a checksum
2015-07-11 13:35:29	-->	razvanc87 (~razvanc87@79.97.80.96) has joined #python
2015-07-11 13:35:30	yonatan	igenius4: What's data are you hashing to send to them, and what are they sending back?
2015-07-11 13:35:34	donkdonk	igenius4: are they maybe saying "yes we got all of your data. here is the md5 hash to make sure?"
2015-07-11 13:35:36	-->	Deesl (~bsdboy@redhat/deesl) has joined #python
2015-07-11 13:35:58	dondon	ChrisWarrick: thank you
2015-07-11 13:36:00	yonatan	So CPython is the best non-experimental implementation of python3?
2015-07-11 13:36:15	thatprogrammer	hey, i need a list of every single ASCII/utf-8/utf-16 character… i know i can grab all the ASCII characters using the strings module, but how can i quickly generate each utf-8/16 char?
2015-07-11 13:36:15	igenius4	the data is an XML list of ASINS and prices
2015-07-11 13:36:15	yonatan	(in terms of running time for processing text data)
2015-07-11 13:36:27	nopf	yonatan: i think all py3 is experimental
2015-07-11 13:36:28	igenius4	no, i'm sending them the hash, they aren't giving me a hash
2015-07-11 13:36:29	ChrisWarrick	yonatan: CPython is the reference implementation, so it’s on par with the language definition.  cpython is the safest
2015-07-11 13:36:39	-->	Tennis (~Tennis@unaffiliated/tennis) has joined #python
2015-07-11 13:36:52	ChrisWarrick	thatprogrammer: “utf-8/utf-16”, that’s nonsense.  Did you mean “unicode strings of all Unicode characters”?
2015-07-11 13:37:05	<--	Quitta (~quitta@host81-131-167-206.range81-131.btcentralplus.com) has quit (Remote host closed the connection)
2015-07-11 13:37:11	-->	PCatinean (~wiz@188.25.163.190) has joined #python
2015-07-11 13:37:27	<--	jkyle (~jkyle@unaffiliated/jkyle) has quit (Ping timeout: 265 seconds)
2015-07-11 13:37:42	<--	starter (~zahra@2.178.126.158) has quit (Quit: starter)
2015-07-11 13:37:46	thatprogrammer	ChrisWarrick: not sure why it is nonsense, and yes
2015-07-11 13:37:52	<--	Ceber (~PHP5439-0@dslb-088-072-187-133.088.072.pools.vodafone-ip.de) has quit (Ping timeout: 246 seconds)
2015-07-11 13:37:53	<--	masasin (~Thunderbi@p12060-ipngn100101kyoto.kyoto.ocn.ne.jp) has quit (Ping timeout: 256 seconds)
2015-07-11 13:37:56	nopf	igenius4: why are you sending them the hash?
2015-07-11 13:38:07	ChrisWarrick	thatprogrammer: UTF-8 and UTF-16 are encodings, not characters.
2015-07-11 13:38:17	thatprogrammer	ChrisWarrick: i am aware of this
2015-07-11 13:38:17	ChrisWarrick	thatprogrammer: This sounds like an XY problem though, why do you need a list like this?
2015-07-11 13:38:42	thatprogrammer	ChrisWarrick: testing an input for arbitrary chars, if it will break the app
2015-07-11 13:38:47	<--	Kassad (~kassad@bitnet.me) has quit (Remote host closed the connection)
2015-07-11 13:39:06	-->	newke (~newke@88-223-71-157.meganet.lt) has joined #python
2015-07-11 13:39:09	ChrisWarrick	thatprogrammer: ĸ³ł€ħ¶€ĸħ³»€–ħĸ³€»–ħĸ³»ĸ←ŋ²€»–ħ
2015-07-11 13:39:09	igenius4	nopf: it's just part of the protocol from the documentation. i take the md5/base64 hash of the XML content to send them
2015-07-11 13:39:27	ChrisWarrick	kentzo: take that, add in some SMP characters (your favorite emoji) and presto
2015-07-11 13:39:32	thatprogrammer	ChrisWarrick: ? lol?
2015-07-11 13:39:43	ChrisWarrick	thatprogrammer: ↑
2015-07-11 13:39:49	ChrisWarrick	kentzo: sorry
2015-07-11 13:39:57	etbr	hey guys, I have an if statement that isn't working properly.  any suggestions?  :  if "media" in str(item.flask).lower() or "yp" in str(item.flask).lower():  - trying to make something that checks to see if either "yp" or "media" is in a string
2015-07-11 13:39:59	thatprogrammer	ChrisWarrick: i guess i will need to manually convert the hex —> UTF8/16
2015-07-11 13:40:01	ChrisWarrick	thatprogrammer: You probably do not need to test each and every Unicode character
2015-07-11 13:40:08	nopf	igenius4: well, i don't know what protocol and why. but sending a hash only can identify content the receiver already has
2015-07-11 13:40:17	ChrisWarrick	thatprogrammer: how do you get the unicode, and why do you need to care about utf-16?
2015-07-11 13:40:27	igenius4	ok, so i guess i'm missing something
2015-07-11 13:40:39	igenius4	thanks nopf et. al.
2015-07-11 13:40:41	thatprogrammer	ChrisWarrick: i know what i need to do, i just thought there would be a faster way
2015-07-11 13:40:48	thatprogrammer	ChrisWarrick: thx n e ways
2015-07-11 13:40:57	-->	Kassad (~kassad@bitnet.me) has joined #python
2015-07-11 13:41:33	ChrisWarrick	thatprogrammer: py2: [unichr(i) for i in xrange(0x0, 0x110000)]   (most of that is garbage though)
2015-07-11 13:42:06	thatprogrammer	ChrisWarrick: thats okay, i just need to see if any of the chars can break/cause an exception
2015-07-11 13:42:09	thatprogrammer	ChrisWarrick: thx
2015-07-11 13:42:11	ChrisWarrick	thatprogrammer: you could limit yourself to 0x1fa00 as the upper bound (plane 1 + 2) which contains more characters
2015-07-11 13:42:24	ChrisWarrick	more existing characters*\
2015-07-11 13:42:35	-->	btc_panhandler (~w7tek@216.49.181.251) has joined #python
2015-07-11 13:42:37	dondon	ChrisWarrick: thanks so much for your help, i see how it's making a tuple an then comparing it to each value in that tuple. =]
2015-07-11 13:42:52	<--	wicope (~wicope@31.Red-81-36-192.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2015-07-11 13:43:10	-->	yati1 (~Thunderbi@87.237.26.108) has joined #python
2015-07-11 13:43:15	thatprogrammer	ChrisWarrick: u da man, thx
2015-07-11 13:43:33	<--	yati (~Thunderbi@87.237.26.108) has quit (Read error: Connection reset by peer)
2015-07-11 13:43:33	--	yati1 is now known as yati
2015-07-11 13:44:36	-->	Ceber (~PHP5439-0@dslb-092-072-036-039.092.072.pools.vodafone-ip.de) has joined #python
2015-07-11 13:44:51	<--	sanketdg (~sanketdg@43.251.170.108) has quit (Quit: Leaving)
2015-07-11 13:45:02	<--	Willis (Willis@107.161.160.241) has quit (Ping timeout: 248 seconds)
2015-07-11 13:45:07	<--	fission6 (~fission6@cpe-72-225-218-26.nyc.res.rr.com) has quit (Quit: fission6)
2015-07-11 13:45:14	-->	alusion (~alu@unaffiliated/alusion) has joined #python
2015-07-11 13:46:06	<--	jorj (~jorj@162.220.240.216) has quit (Ping timeout: 248 seconds)
2015-07-11 13:46:30	-->	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has joined #python
2015-07-11 13:46:53	<--	dondon (~dondon@unaffiliated/dondon) has left #python ("Bye-Bye!")
2015-07-11 13:46:55	<--	Hink (~Hink@146-115-61-133.c3-0.frm-ubr1.sbo-frm.ma.cable.rcn.com) has quit (Quit: Leaving)
2015-07-11 13:47:10	<--	Deesl (~bsdboy@redhat/deesl) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-07-11 13:47:10	<--	btc_panhandler (~w7tek@216.49.181.251) has quit (Ping timeout: 248 seconds)
2015-07-11 13:47:15	-->	Hink (~Hink@146-115-61-133.c3-0.frm-ubr1.sbo-frm.ma.cable.rcn.com) has joined #python
2015-07-11 13:48:47	etbr	hey all: how can i test if a string contains either one of two potential substrings?
2015-07-11 13:49:01	Eyes	can it be both?
2015-07-11 13:49:10	etbr	potentially yes
2015-07-11 13:49:14	<--	pwnz0r (~pwnz0r@ip68-4-183-88.oc.oc.cox.net) has quit (Remote host closed the connection)
2015-07-11 13:49:28	etbr	but if it contains either substring, or both, i need to perform a special operation on it
2015-07-11 13:49:38	Eyes	any(x in main_s for x in strings_to_test)
2015-07-11 13:49:54	etbr	where strings_to_test is a list?
2015-07-11 13:49:56	Eyes	yep
2015-07-11 13:49:59	etbr	thx
2015-07-11 13:50:53	<--	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has quit (Ping timeout: 246 seconds)
2015-07-11 13:51:01	<--	Nahra (~user@unaffiliated/nahra) has quit (Remote host closed the connection)
2015-07-11 13:51:18	<--	clarjon1 (~clarjon1@unaffiliated/clarjon1) has quit (Quit: clarjon1)
2015-07-11 13:51:18	-->	Nahra (~user@unaffiliated/nahra) has joined #python
2015-07-11 13:51:47	<--	buffal0 (~buffal0@gateway/vpn/privateinternetaccess/buffal0) has quit (Ping timeout: 240 seconds)
2015-07-11 13:52:50	igenius4	in the requests library, how does one get the full URL posted string that actually is sent
2015-07-11 13:53:03	--	irc: disconnected from server
2015-07-11 13:53:08	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 13:53:08	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 13:53:08	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 13:53:08	--	Channel #python: 1689 nicks (0 ops, 0 voices, 1689 normals)
2015-07-11 13:53:19	<--	TheoMurpse (~TheoMurps@cpe-72-191-48-158.satx.res.rr.com) has quit (Quit: This computer has gone to sleep)
2015-07-11 13:53:26	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 13:54:07	donkdonk	igenius4: a POST does not show data in the URL
2015-07-11 13:54:09	igenius4	you can pass requests data like this: requests(method, url, data, headers). all those parameters go into constructing the full URL. but how do you print out the full URL to see what it is?
2015-07-11 13:54:20	igenius4	it doesn't?
2015-07-11 13:54:33	donkdonk	no
2015-07-11 13:54:36	donkdonk	only GET
2015-07-11 13:54:40	<--	inspiron (~black@adsl-75-37-24-87.dsl.pltn13.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2015-07-11 13:54:42	igenius4	so when is that data sent?
2015-07-11 13:54:57	donkdonk	requests(method, url, DATA, headers)
2015-07-11 13:55:00	donkdonk	right there
2015-07-11 13:55:11	igenius4	i mean, if it isn't passed in the URL, then how is passed to the server?
2015-07-11 13:55:20	donkdonk	via the HTTP POST verb
2015-07-11 13:55:26	igenius4	oh ok
2015-07-11 13:55:29	-->	Deesl (~bsdboy@redhat/deesl) has joined #python
2015-07-11 13:55:31	<--	kentzo (~Adium@c-68-84-2-205.hsd1.va.comcast.net) has quit (Quit: Leaving.)
2015-07-11 13:55:47	<--	yeticry (~yeticry@223.240.228.19) has quit (Read error: Connection reset by peer)
2015-07-11 13:56:03	-->	yeticry (~yeticry@223.240.231.8) has joined #python
2015-07-11 13:56:04	igenius4	can you explain that to me in more detail? so maybe first some handshaking goes on? like the post URL is sent, the server then sends back a response that it's okay to send the DATA?
2015-07-11 13:56:19	donkdonk	you send the data as part of the HTTP request.
2015-07-11 13:56:26	donkdonk	it's all the same part of the call.
2015-07-11 13:56:39	-->	jkyle (~jkyle@unaffiliated/jkyle) has joined #python
2015-07-11 13:56:45	igenius4	what does it look like going over http? does it just look like raw encoded data?
2015-07-11 13:57:00	donkdonk	it's encoded.
2015-07-11 13:57:22	-->	hackebrot (~textual@HSI-KBW-046-005-016-056.hsi8.kabel-badenwuerttemberg.de) has joined #python
2015-07-11 13:57:42	<--	hackebrot (~textual@HSI-KBW-046-005-016-056.hsi8.kabel-badenwuerttemberg.de) has quit (Client Quit)
2015-07-11 13:57:49	igenius4	so the data is not really appended to the URL technically speaking in a POST
2015-07-11 13:57:59	donkdonk	igenius4: http://stackoverflow.com/a/10002620/2001268
2015-07-11 13:58:04	donkdonk	igenius4: correct
2015-07-11 13:58:08	igenius4	but it follows the URL
2015-07-11 13:58:26	igenius4	in other words, the URL and DATA are sent pretty much at the same time
2015-07-11 13:59:00	-->	hackebrot (~textual@HSI-KBW-046-005-016-056.hsi8.kabel-badenwuerttemberg.de) has joined #python
2015-07-11 13:59:08	donkdonk	yes
2015-07-11 13:59:35	Meorge	[11:54:29] <Meorge> For my code editor, I'd like to allow the user to insert a blank function
2015-07-11 13:59:35	Meorge	[11:54:43] <Meorge> currently using this: self.textedit.edit.insertPlainText("""def function():\n\tpass""")
2015-07-11 13:59:37	Meorge	[11:55:01] <Meorge> however, if the user is indented in at all, it screws up the function
2015-07-11 13:59:37	Meorge	[11:57:22] <Meorge> example with no indent: http://prntscr.com/7riwg8
2015-07-11 13:59:39	igenius4	when the DATA i sent over the web, is it pretty much free for anyone to spy on?
2015-07-11 13:59:45	Meorge	[11:58:02] <Meorge> example with indent: http://prntscr.com/7riwpx
2015-07-11 13:59:54	Meorge	anyone here have any ideas on how I could do this?
2015-07-11 13:59:55	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Ping timeout: 246 seconds)
2015-07-11 14:00:00	donkdonk	igenius4: if it's over HTTP then yes. HTTPS is always a good idea.
2015-07-11 14:00:14	igenius4	oh, now i see why there's that hash md5
2015-07-11 14:00:37	igenius4	the md5/base64 hash is there as extra assurance that the POSTed DATA hasn't been altered
2015-07-11 14:00:38	-->	janelleb (~janelleb@unaffiliated/janelleb) has joined #python
2015-07-11 14:00:44	etbr	if i use a break in a nested for, is there any way to select which for loop is broken?
2015-07-11 14:00:45	donkdonk	correct :D
2015-07-11 14:01:10	donkdonk	igenius4: it's to make sure it didn't get mangled in the upload.
2015-07-11 14:01:17	<--	Nahra (~user@unaffiliated/nahra) has quit (Remote host closed the connection)
2015-07-11 14:01:39	<--	drazisil (~drazisil@unaffiliated/drazisil) has left #python ("Leaving")
2015-07-11 14:01:43	igenius4	donkdonk: but it is using https by default
2015-07-11 14:01:54	igenius4	oh....ok i see
2015-07-11 14:01:56	-->	DLSteve (~DLSteve@c-24-30-90-21.hsd1.ga.comcast.net) has joined #python
2015-07-11 14:01:58	-->	robstory (~robstory@ec2-54-183-99-253.us-west-1.compute.amazonaws.com) has joined #python
2015-07-11 14:02:06	igenius4	so the data might even get mangled by my own computer, not by a hacker
2015-07-11 14:02:08	<--	Haudegen (~quassel@85.124.51.57) has quit (Ping timeout: 256 seconds)
2015-07-11 14:02:24	donkdonk	igenius4: or lost packets.
2015-07-11 14:02:30	igenius4	oh, right.....ok makes sense
2015-07-11 14:03:10	igenius4	on the layer below http, what does a POST request look like?
2015-07-11 14:03:17	<--	}ls{ (~uhelp@unaffiliated/ls/x-8089558) has quit (Quit: User terminated by real life interrupt)
2015-07-11 14:03:25	igenius4	is the URL and DATA basically lumped together as a big text file?
2015-07-11 14:03:35	donkdonk	not really.
2015-07-11 14:05:09	donkdonk	igenius4: the data gets encoded into a binary object
2015-07-11 14:05:35	-->	abara (~abara@unaffiliated/abara) has joined #python
2015-07-11 14:05:51	-->	dseitz (~textual@ip70-191-238-148.pn.at.cox.net) has joined #python
2015-07-11 14:06:37	-->	basiclaser (uid10861@gateway/web/irccloud.com/x-qlgylezndjbdnnpb) has joined #python
2015-07-11 14:08:04	<--	rafaelcpalmeida (~rafaelcpa@pa3-84-91-120-114.netvisao.pt) has quit (Remote host closed the connection)
2015-07-11 14:08:36	igenius4	thanks donkdonk
2015-07-11 14:08:48	igenius4	i am starting to get it now...damn i didn't understand this for the longest time
2015-07-11 14:09:16	-->	Bronto22 (~mennoh@ip5456f7e7.speed.planet.nl) has joined #python
2015-07-11 14:09:29	abara	hey guys, question here: there is a way/method to access deeper objects on a dictionary passing a list of keys? the usual is obj['foo']['boo'] but i want something like obj.get(['foo','boo'])
2015-07-11 14:09:30	-->	elyezer (~elyezer@unaffiliated/elyezer) has joined #python
2015-07-11 14:09:45	donkdonk	igenius4: messing with curl helped me a bunch
2015-07-11 14:10:06	Jerub	abara: you can write a function that does that pretty easily.
2015-07-11 14:10:18	<--	psyprus (~psyprus@unaffiliated/psyprus) has quit (Read error: Connection reset by peer)
2015-07-11 14:11:04	-->	moss (~moss@unaffiliated/moss) has joined #python
2015-07-11 14:11:22	-->	john_doe_jr (~Adium@209.33.40.64) has joined #python
2015-07-11 14:12:48	<--	crakrjak (~merc@unaffiliated/crakrjak) has quit (Quit: meh)
2015-07-11 14:12:54	igenius4	i guess the confusing thing was that sometimes POSTs use the querystring format just as with GETs
2015-07-11 14:13:26	<--	Deesl (~bsdboy@redhat/deesl) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-07-11 14:13:41	<--	abara (~abara@unaffiliated/abara) has quit (Read error: Connection reset by peer)
2015-07-11 14:13:47	<--	elyezer (~elyezer@unaffiliated/elyezer) has quit (Ping timeout: 240 seconds)
2015-07-11 14:14:13	-->	kokut (~ayy@81.202.203.91.dyn.user.ono.com) has joined #python
2015-07-11 14:14:16	<--	kokut (~ayy@81.202.203.91.dyn.user.ono.com) has quit (Max SendQ exceeded)
2015-07-11 14:14:21	donkdonk	igenius4: that usually just a thing APIs do to make it easier to use.
2015-07-11 14:14:28	<--	sphenxes (~sphenxes@178-191-161-139.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2015-07-11 14:14:38	-->	kokut (~ayy@81.202.203.91.dyn.user.ono.com) has joined #python
2015-07-11 14:14:46	<--	john_doe_jr (~Adium@209.33.40.64) has left #python
2015-07-11 14:14:55	donkdonk	but yea, i can understand the confusion.
2015-07-11 14:15:36	-->	KnownSyntax (~KnownSynt@unaffiliated/knownsyntax) has joined #python
2015-07-11 14:15:43	-->	amaninacan (~pie1@unaffiliated/amaninacan) has joined #python
2015-07-11 14:15:47	-->	Corey84 (~Corey84@unaffiliated/corey84) has joined #python
2015-07-11 14:15:50	nopf	donkdonk: ? POST uses urlencoded form data
2015-07-11 14:16:00	-->	akosgheri (~Adium@64.197.53.126) has joined #python
2015-07-11 14:16:02	-->	abara (~abara@unaffiliated/abara) has joined #python
2015-07-11 14:16:06	-->	otter768 (~otter768@cpe-67-11-53-3.satx.res.rr.com) has joined #python
2015-07-11 14:16:11	-->	TheMediator (uid24709@gateway/web/irccloud.com/x-kbpvspjglinxemdd) has joined #python
2015-07-11 14:16:24	abara	igenius4: yeah, but i thought it could be already implemented
2015-07-11 14:16:25	abara	:/
2015-07-11 14:16:39	igenius4	oh?
2015-07-11 14:16:44	-->	crush26 (~crush26@75-131-1-96.dhcp.bufr.ga.charter.com) has joined #python
2015-07-11 14:17:09	igenius4	i'm lost...i think i'm confusing everyone too
2015-07-11 14:17:31	-->	fission6 (~fission6@cpe-72-225-218-26.nyc.res.rr.com) has joined #python
2015-07-11 14:17:32	<--	Corey84 (~Corey84@unaffiliated/corey84) has quit (Max SendQ exceeded)
2015-07-11 14:17:33	igenius4	i don't need to understand all the low-level stuff. i just need to learn to use the requests library
2015-07-11 14:17:46	igenius4	that's probably what i should focus on for now
2015-07-11 14:18:00	-->	peterwalker78 (~peterwalk@cpc5-hitc7-2-0-cust235.9-2.cable.virginm.net) has joined #python
2015-07-11 14:18:01	<--	cakeslam (~cakeslam@pdpc/supporter/student/bdotson) has quit
2015-07-11 14:18:16	nopf	focus on focusing
2015-07-11 14:18:32	-->	Haudegen (~quassel@85.124.51.57) has joined #python
2015-07-11 14:18:37	-->	bin_005 (~ctlM@80.83.238.93) has joined #python
2015-07-11 14:19:02	abara	nopf: yep
2015-07-11 14:19:11	abara	igenius4: what's your probleme dude?
2015-07-11 14:19:42	igenius4	i just didn't understand how POSTed data was being sent
2015-07-11 14:19:51	-->	himanshu (~Himanshu_@unaffiliated/himanshu) has joined #python
2015-07-11 14:19:53	igenius4	it's not sent in the URL
2015-07-11 14:20:04	-->	Corey84 (~Corey84@unaffiliated/corey84) has joined #python
2015-07-11 14:20:12	abara	igenius4: and you're using what to send/recv?
2015-07-11 14:20:31	<--	meat_py (~meat_py@c-73-166-210-32.hsd1.tx.comcast.net) has quit (Remote host closed the connection)
2015-07-11 14:20:40	<--	otter768 (~otter768@cpe-67-11-53-3.satx.res.rr.com) has quit (Ping timeout: 250 seconds)
2015-07-11 14:20:59	-->	SirMcLouis (~SirMcLoui@mobile-access-5d6a43-157.dhcp.inet.fi) has joined #python
2015-07-11 14:21:10	-->	meat_py (~meat_py@c-73-166-210-32.hsd1.tx.comcast.net) has joined #python
2015-07-11 14:21:26	igenius4	the python requests lib
2015-07-11 14:21:42	-->	FvD (~Thunderbi@ip95-153-64-186.ct.co.cr) has joined #python
2015-07-11 14:22:36	<--	groton (~groton@unaffiliated/groton) has quit (Ping timeout: 264 seconds)
2015-07-11 14:22:50	-->	tyrostone (~lstone@c-24-218-81-148.hsd1.ma.comcast.net) has joined #python
2015-07-11 14:23:51	-->	bluish (~bluish@87-207-132-195.dynamic.chello.pl) has joined #python
2015-07-11 14:23:52	-->	Cultist (~CultOfThe@unaffiliated/cultist) has joined #python
2015-07-11 14:24:28	Cultist	Had a question about the best way to go about doing a basic thing
2015-07-11 14:25:05	abara	Cultist: don't ask to ask, just ask
2015-07-11 14:25:09	Cultist	If I have a python program that presents the user with a GUI that he works through, and needs to reference a big list of information
2015-07-11 14:25:09	nopf	you should do it the obvious way
2015-07-11 14:25:28	<--	xtrntr (~Thunderbi@bb116-14-182-63.singnet.com.sg) has quit (Ping timeout: 246 seconds)
2015-07-11 14:25:33	Cultist	Would it be better to write the information directly into the script, or to have it outside in a text file or something and referenced from that
2015-07-11 14:25:52	nopf	Cultist: it depends
2015-07-11 14:26:04	-->	bin__ (~bin__@2620:119:5042:900::61) has joined #python
2015-07-11 14:26:06	papna	Cultist: That can depend and both can be fine.
2015-07-11 14:26:21	<--	Azulinho (~Azulinho@207.34.75.2) has quit (Ping timeout: 256 seconds)
2015-07-11 14:26:22	papna	Cultist: What does the GUI do and what is the information, really?
2015-07-11 14:26:24	-->	Cheaterman (~cheaterma@unaffiliated/cheaterman) has joined #python
2015-07-11 14:26:26	b0nn	option 3: persit in a DB
2015-07-11 14:26:34	b0nn	persist*
2015-07-11 14:26:40	Cultist	it's a character generator for a certain table top RPG I play
2015-07-11 14:26:56	Cultist	there are 300-400 options of a certain kind that the user would work with
2015-07-11 14:26:59	Cheaterman	Hello buddies I hope you're doing good! I'd like to give my self-signed cert to urllib2 so that my client app expects it
2015-07-11 14:27:17	<--	gjuniioor (bad6e3c1@gateway/web/freenode/ip.186.214.227.193) has left #python
2015-07-11 14:27:17	Cheaterman	I have no idea how to do this, I'm not sure the load_cert_chain() method is what I'm looking for
2015-07-11 14:27:31	Cultist	each item is basically a title and a few variables
2015-07-11 14:27:58	-->	smccarthy (~smccarthy@ip70-162-150-206.ph.ph.cox.net) has joined #python
2015-07-11 14:28:17	Cultist	A db would probably be best but I don't know anything about using a db.
2015-07-11 14:28:33	papna	Cultist: Do you have any other data files?
2015-07-11 14:28:40	-->	pwnz0r (~pwnz0r@ip68-4-183-88.oc.oc.cox.net) has joined #python
2015-07-11 14:28:45	<--	blue_deref (~blue_dere@cpe-67-247-235-240.buffalo.res.rr.com) has quit (Quit: bbn)
2015-07-11 14:28:47	<--	meat_py (~meat_py@c-73-166-210-32.hsd1.tx.comcast.net) has quit (Remote host closed the connection)
2015-07-11 14:28:59	<--	moss (~moss@unaffiliated/moss) has quit (Quit: QUITTING)
2015-07-11 14:28:59	papna	Cultist: Hard-coding this is okay. If, later, you need to make your application more flexible you can convert it to use a non-hard-coded datastore.
2015-07-11 14:29:12	<--	xxneolithicxx (~xxneolith@c-71-235-111-216.hsd1.ct.comcast.net) has quit (Ping timeout: 255 seconds)
2015-07-11 14:29:20	-->	Azulinho (~Azulinho@207.34.75.2) has joined #python
2015-07-11 14:29:28	<--	eb0t (~ebot@unaffiliated/eblip) has quit (Quit: WeeChat 1.1.1)
2015-07-11 14:30:08	-->	stranac (~stranac@93-143-174-36.adsl.net.t-com.hr) has joined #python
2015-07-11 14:30:11	Cultist	I'll probably go that way
2015-07-11 14:30:22	Cultist	thanks
2015-07-11 14:30:59	-->	meat_py (~meat_py@c-73-166-210-32.hsd1.tx.comcast.net) has joined #python
2015-07-11 14:31:39	-->	phax (~phax@unaffiliated/phax) has joined #python
2015-07-11 14:32:10	<--	crush26 (~crush26@75-131-1-96.dhcp.bufr.ga.charter.com) has quit
2015-07-11 14:32:58	-->	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has joined #python
2015-07-11 14:33:36	<--	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has quit (Max SendQ exceeded)
2015-07-11 14:34:06	<--	tyrostone (~lstone@c-24-218-81-148.hsd1.ma.comcast.net) has quit (Quit: tyrostone)
2015-07-11 14:34:06	<--	j0map0ma (~j0map0ma@c-24-61-41-244.hsd1.ma.comcast.net) has quit (Read error: Connection reset by peer)
2015-07-11 14:34:23	-->	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has joined #python
2015-07-11 14:34:51	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Ping timeout: 256 seconds)
2015-07-11 14:35:10	<--	AlphaAtom (~textual@cpc17-heme10-2-0-cust806.9-1.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-07-11 14:35:18	-->	sqlock (~sqlock@135-23-201-205.cpe.pppoe.ca) has joined #python
2015-07-11 14:35:27	TheMediator	Can anyone help me with PIL.ImageGrab?
2015-07-11 14:36:01	<--	bluish (~bluish@87-207-132-195.dynamic.chello.pl) has quit (Quit: bluish)
2015-07-11 14:36:02	TheMediator	I keep getting "object has no attribute"
2015-07-11 14:36:38	papna	TheMediator: Did you import PIL.ImageGrab?
2015-07-11 14:36:49	papna	TheMediator: You can't just import PIL. You have to import the PIL.ImageGrab module
2015-07-11 14:37:00	-->	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has joined #python
2015-07-11 14:37:06	-->	captbaritone (~captbarit@jordaneldredge.com) has joined #python
2015-07-11 14:37:08	-->	jonmorehouse (~jonmoreho@2606:6000:66c8:8700:3c6b:ecfe:79d0:ac68) has joined #python
2015-07-11 14:37:45	<--	xlogik (~xlogik@c-73-219-248-99.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2015-07-11 14:37:47	TheMediator	thanks a bunch papna
2015-07-11 14:37:57	TheMediator	didn't realize it worked like that
2015-07-11 14:38:14	<--	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has quit (Remote host closed the connection)
2015-07-11 14:38:28	<--	greg_f (~greg@altlinux/developer/greg) has quit (Remote host closed the connection)
2015-07-11 14:39:43	<--	pwnz0r (~pwnz0r@ip68-4-183-88.oc.oc.cox.net) has quit (Remote host closed the connection)
2015-07-11 14:40:00	<--	sqlock (~sqlock@135-23-201-205.cpe.pppoe.ca) has quit (Ping timeout: 264 seconds)
2015-07-11 14:40:15	<--	dcrouch (~dcrouch@24-180-93-136.dhcp.bycy.mi.charter.com) has quit (Quit: This computer has gone to sleep)
2015-07-11 14:40:16	<--	PCatinean (~wiz@188.25.163.190) has quit (Read error: Connection reset by peer)
2015-07-11 14:41:07	<--	Haudegen (~quassel@85.124.51.57) has quit (Ping timeout: 244 seconds)
2015-07-11 14:41:26	-->	kirotawa (~kirotawa@177.205.183.186.dynamic.adsl.gvt.net.br) has joined #python
2015-07-11 14:41:54	<--	jonmorehouse (~jonmoreho@2606:6000:66c8:8700:3c6b:ecfe:79d0:ac68) has quit (Ping timeout: 252 seconds)
2015-07-11 14:43:42	<--	robstory (~robstory@ec2-54-183-99-253.us-west-1.compute.amazonaws.com) has quit (Ping timeout: 244 seconds)
2015-07-11 14:43:59	<--	akosgheri (~Adium@64.197.53.126) has left #python
2015-07-11 14:44:06	<--	omarrr (~omarrr@dhcp-077-248-039-198.chello.nl) has quit (Quit: Leaving)
2015-07-11 14:44:46	-->	dimitrovskif (59cd2d02@gateway/web/freenode/ip.89.205.45.2) has joined #python
2015-07-11 14:45:54	dimitrovskif	How do you guys deploy and update Python apps? I need 3 uwsgi+django nodes and one loadbalancer, no idea how to automate that
2015-07-11 14:46:30	<--	linkedinyou (~kvirc@unaffiliated/linkedinyou) has quit (Ping timeout: 252 seconds)
2015-07-11 14:47:23	-->	exxy- (~exxy-@c-76-100-105-181.hsd1.md.comcast.net) has joined #python
2015-07-11 14:48:06	-->	bin_005_j (~ctlM@80.83.238.93) has joined #python
2015-07-11 14:49:28	pyCasso	how do i reverse a list while using sorted()
2015-07-11 14:49:39	<--	liefer (~liefer@3e6b4ca3.rev.stofanet.dk) has quit (Quit: This computer has gone to sleep)
2015-07-11 14:50:06	<--	hackebrot (~textual@HSI-KBW-046-005-016-056.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-07-11 14:50:08	yeryry	You want the sort order inverted? Or you want to use sorted() to reverse a list rather than sort it?
2015-07-11 14:50:30	pyCasso	inverted i believe
2015-07-11 14:50:37	-->	Zylva (~Zylva@197.203.61.151) has joined #python
2015-07-11 14:50:37	yeryry	reverse=True
2015-07-11 14:50:45	-->	Arnas (~Arnas@78-63-18-208.static.zebra.lt) has joined #python
2015-07-11 14:51:10	<--	bin_005 (~ctlM@80.83.238.93) has quit (Ping timeout: 248 seconds)
2015-07-11 14:51:14	<--	thatprogrammer (~thatprogr@99.250.178.199) has quit (Quit: thatprogrammer)
2015-07-11 14:51:24	-->	koitaki (~chatzilla@host-92-20-53-100.as13285.net) has joined #python
2015-07-11 14:51:49	Arnas	Okay, this is a really stupid question, but I can't seem to figure it out why do we need self.name = name and self argument in sayHi()? https://bpaste.net/show/fa81e1b926ee
2015-07-11 14:52:35	-->	thatprogrammer (~thatprogr@CPEd867d9d1921b-CM84948c579eb0.cpe.net.cable.rogers.com) has joined #python
2015-07-11 14:52:45	-->	khando (~Matt@NW-ESR1-72-49-110-170.fuse.net) has joined #python
2015-07-11 14:53:15	-->	Fred_Flintstone (~Fred_Flin@cpc68351-cbly5-2-0-cust484.6-2.cable.virginm.net) has joined #python
2015-07-11 14:53:25	Awesomecase	I'm new myself, but the understanding I have is that the self attribute is necessary in order to take the object input rather than a variable defined in the class
2015-07-11 14:53:32	<--	Fred_Flintstone (~Fred_Flin@cpc68351-cbly5-2-0-cust484.6-2.cable.virginm.net) has quit (Client Quit)
2015-07-11 14:54:00	Awesomecase	ex. You could have a name variable inside the class but not in the method and the self.name is necessary to differentiate the two
2015-07-11 14:54:31	<--	achsmill (achsmill@71-87-44-92.dhcp.eucl.wi.charter.com) has quit (Ping timeout: 264 seconds)
2015-07-11 14:55:18	<--	sk4tsh (~sk4tsh@aftr-37-201-195-135.unity-media.net) has quit (Ping timeout: 255 seconds)
2015-07-11 14:55:38	Awesomecase	I'm working on an example I could show you
2015-07-11 14:55:43	<--	tm (~sinnlos@87.118.98.159) has quit (Ping timeout: 264 seconds)
2015-07-11 14:55:43	Arnas	k
2015-07-11 14:55:47	Arnas	thanks, I'll wait
2015-07-11 14:55:55	yeryry	Yeah, because the sayHi doesn't belong to one particular Person, it belongs to the class, so it needs some way to know which person to deal with when called
2015-07-11 14:55:57	dimitrovskif	Arnas: Class functions are just functions. class A: def sayHi(self) is no different than just def sayHi(). When you call a function on an instance, the first argument is the instance itself. You can use that to get/set attributes of that specific instance for example
2015-07-11 14:56:11	-->	jandrusk_ (~jra@cpe-104-231-115-57.neo.res.rr.com) has joined #python
2015-07-11 14:56:23	<--	jandrusk (~jra@cpe-104-231-115-57.neo.res.rr.com) has quit (Ping timeout: 256 seconds)
2015-07-11 14:56:34	yeryry	Also "self" isn't a magic name, it's just the standard one used..
2015-07-11 14:56:35	-->	loor (~blank@108.61.228.8) has joined #python
2015-07-11 14:56:45	Arnas	dimitrovskif, but why do I even need to type self here? I mean I can't type anything else but "self"
2015-07-11 14:56:49	Arnas	yeryry, I know
2015-07-11 14:56:52	<--	glosoli (~textual@unaffiliated/glosoli) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-07-11 14:57:19	<--	khando (~Matt@NW-ESR1-72-49-110-170.fuse.net) has quit (Ping timeout: 246 seconds)
2015-07-11 14:57:36	yeryry	You could call Person.sayHi(apersonhere) and it should work
2015-07-11 14:57:39	dimitrovskif	Arnas: If you want to call a function on an instance, the first argument should be 'self'. It CAN be other things, but for the love of god don't name it anything else - the style guide says 'self'.
2015-07-11 14:57:46	<--	ramsub07 (~Instantbi@49.207.190.22) has quit (Remote host closed the connection)
2015-07-11 14:57:58	Awesomecase	Self is the variable that the object name is assigned too, it literally means the object itself
2015-07-11 14:58:02	-->	tm (~sinnlos@87.118.98.159) has joined #python
2015-07-11 14:58:02	dimitrovskif	Arnas: Btw class functions can be argument-less. But you shouldn't call them on instances if you do that.
2015-07-11 14:58:29	dimitrovskif	Arnas: class MyClass(object): def sayHi(): print('Hiii!')
2015-07-11 14:58:34	dimitrovskif	Arnas: MyClass.sayHi()
2015-07-11 14:58:57	-->	zombie-guru (~zombie-gu@63-233-119-111.dia.static.qwest.net) has joined #python
2015-07-11 14:59:47	<--	MrCoffee (~coffee@unaffiliated/ridout) has quit (Quit: Lost terminal)
2015-07-11 14:59:49	Arnas	this is so confusing :(
2015-07-11 14:59:50	<--	phr34k (~phpfreake@77-173-215-146.ip.telfort.nl) has quit (Read error: Connection reset by peer)
2015-07-11 14:59:53	<--	exxy- (~exxy-@c-76-100-105-181.hsd1.md.comcast.net) has quit
2015-07-11 14:59:57	Awesomecase	The style guide says that python should be explicit rather than implicit, java for example doesn't have the user put its version of self when creating a method, but python is intended to show everything under the hood and thus self is added by the user
2015-07-11 14:59:58	papna	This is not a fact that one should try to avail themselves of, and it's not true in all versions
2015-07-11 15:00:03	Arnas	I still can't see the point of "self"
2015-07-11 15:00:13	-->	f_davis (~fdavis@cpe-172-248-152-50.socal.res.rr.com) has joined #python
2015-07-11 15:00:20	Arnas	Awesomecase, well, Java has "this" I think
2015-07-11 15:00:23	Awesomecase	it's a placeholder
2015-07-11 15:00:23	Arnas	if I'm not mistaken
2015-07-11 15:00:35	papna	Arnas: Do you not understand why you have to type self, rather than it being automatic, or do you not understand why there is a self at all?
2015-07-11 15:01:02	dimitrovskif	Arnas: do you know the difference between static void sayHi(){} and void sayHi(){} in Java/C#?
2015-07-11 15:01:08	Arnas	papna, I think if I understood why do we need "self" overall, I'd also understand why do I need to type it
2015-07-11 15:01:22	Arnas	dimitrovskif, I know the difference in C
2015-07-11 15:01:32	Jerub	Arnas: different concept in C unfortunately.
2015-07-11 15:01:48	Arnas	Jerub, it can't even be static void in C I think
2015-07-11 15:01:50	<--	Viper168 (~Viper@unaffiliated/viper168) has quit (Ping timeout: 248 seconds)
2015-07-11 15:02:00	Jerub	Arnas: why on earth would you think that's the case?
2015-07-11 15:02:00	Arnas	I'm not really familiar with Java or C#, sorry
2015-07-11 15:02:19	dimitrovskif	Arnas: Hmm, no C doesn't have that. Anyway, C has just functions. Python has functions inside classes too (classes store data like structs do in C)
2015-07-11 15:02:21	Arnas	just trying to learn OOP and I'm using Python for that
2015-07-11 15:02:41	<--	Roey (~roey@66-44-15-211.c3-0.slvr-ubr1.lnh-slvr.md.cable.rcn.com) has quit (Quit: Client exiting)
2015-07-11 15:03:10	<--	s00pcan (~chris@209.197.20.204) has quit (Ping timeout: 252 seconds)
2015-07-11 15:03:35	papna	Arnas: In programs, we have a bunch of state (data) we manipulate...values we want to change a lot. It's inconvenient and confusing to have all happen in just one function, so we want a bunch of functions that can manipulate the same state.
2015-07-11 15:03:36	-->	Roey (~roey@66-44-15-211.c3-0.slvr-ubr1.lnh-slvr.md.cable.rcn.com) has joined #python
2015-07-11 15:03:50	dimitrovskif	Arnas: my_instance = MyClass() since you know C, this means my_instance is like a pointer to an instance of a struct. Except it's not a struct, it's a class. It has members, but it has functions too
2015-07-11 15:04:06	papna	Arnas: Many of the earliest programs solved this by having a bunch of functions that set global variables. This is easy, but is hard to re-use and test and understand.
2015-07-11 15:04:11	dimitrovskif	Arnas: my_instance.sayHi() is like sayHi(my_instance) in C
2015-07-11 15:04:23	-->	xlogik (~xlogik@c-73-219-248-99.hsd1.ma.comcast.net) has joined #python
2015-07-11 15:04:44	papna	Arnas: So someone invented stuff like classes -- this allows a bunch of stuff to operate on the same state/data. We give them that data as `self`.
2015-07-11 15:05:05	-->	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has joined #python
2015-07-11 15:05:22	Awesomecase	^
2015-07-11 15:05:25	<--	zombie-guru (~zombie-gu@63-233-119-111.dia.static.qwest.net) has quit (Ping timeout: 265 seconds)
2015-07-11 15:05:43	-->	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has joined #python
2015-07-11 15:05:49	<--	newke (~newke@88-223-71-157.meganet.lt) has quit (Remote host closed the connection)
2015-07-11 15:05:59	yeryry	Yeah, without something such as self, how would you pass current-instance-of-class to something else?
2015-07-11 15:06:39	-->	fennesz (~fennesz@ppp-2-84-229-1.home.otenet.gr) has joined #python
2015-07-11 15:06:53	-->	zombie-guru (~zombie-gu@63-233-119-111.dia.static.qwest.net) has joined #python
2015-07-11 15:06:57	papna	Arnas: Have you done much programming before in any language, or are you pretty new to programming?
2015-07-11 15:07:11	<--	nimomo (~nimomo@bzq-79-181-110-50.red.bezeqint.net) has quit (Remote host closed the connection)
2015-07-11 15:07:52	<--	ndrei (~avo@83.142.149.227) has quit (Ping timeout: 256 seconds)
2015-07-11 15:07:55	<--	zombie-guru (~zombie-gu@63-233-119-111.dia.static.qwest.net) has quit (Read error: Connection reset by peer)
2015-07-11 15:08:07	Arnas	papna, I know C and Python and asm x86 for a pretty long time, but I've never tried to learn OOP
2015-07-11 15:08:15	Arnas	https://bpaste.net/show/a80bfe1edb70 why it won't work with the 2nd example?
2015-07-11 15:08:25	Arnas	it's so much simpler ,but I bet it looks stupid to you
2015-07-11 15:08:30	yonatan	x_x
2015-07-11 15:08:55	-->	ilpanda (~ilpanda@151.66.247.133) has joined #python
2015-07-11 15:09:17	papna	Arnas: If you want to do Person(some_argument), you need to define __init__ so it can take an argument other than self.
2015-07-11 15:09:17	dimitrovskif	Arnas: you need a 'constructor'. It's the thing that gets called when you create an instance of a class.
2015-07-11 15:09:31	-->	wordsToLiveBy (~wordsToLi@cpe-104-230-102-177.neo.res.rr.com) has joined #python
2015-07-11 15:09:34	papna	Arnas: __init__ is how you define what TheClass(...) does
2015-07-11 15:09:34	skinnay	you need some way of binding 'name' to the class, the second example has no such thing
2015-07-11 15:09:57	dimitrovskif	Arnas: when you create an instance by doing MyClass(arg1, arg2), Python calls__init__(arg1, arg2) and then it returns you a reference to that instance
2015-07-11 15:10:01	-->	Viper168 (~Viper@unaffiliated/viper168) has joined #python
2015-07-11 15:10:05	yeryry	sayHi already automatically gets the first parameter filled in (normally self), so if you define it with one parameter, then pass it one, it's actually getting two
2015-07-11 15:10:09	papna	Arnas: In C, we use a very similar pattern in the way we use structs.
2015-07-11 15:10:23	--	Eyes is now known as Eyess
2015-07-11 15:10:29	<--	pyCasso (~Hyperking@cpe-98-25-89-42.sc.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-07-11 15:10:48	Arnas	okay, what about now? https://bpaste.net/show/e18d6581c85a
2015-07-11 15:10:51	yonatan	Arnas: first thing, the first argument to any method (function belonging to an object) is almost always (always, for your purposes right now) going to be the class object itself. this allows you to actually refer to the object from within itself. the canonical parameter name for this is "self", meaning that now a method can refer to its enclosing object and its properties by using "self" and "self.propertyname", respectively
2015-07-11 15:10:56	Arnas	why would I need "self" or a constructor with this example?
2015-07-11 15:11:13	-->	BeholdMyGlory (~behold@unaffiliated/beholdmyglory) has joined #python
2015-07-11 15:11:13	<--	pouledodue (~textual@modemcable034.135-131-66.mc.videotron.ca) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-07-11 15:11:34	-->	carvantes (~carvantes@2602:306:36ed:cec0:f44c:b2ae:1e0b:f0) has joined #python
2015-07-11 15:11:45	Awesomecase	Arnas, because "name" can be anything right now
2015-07-11 15:12:08	Arnas	Awesomecase, hm? It's the argument of the function
2015-07-11 15:12:21	yeryry	Person.sayHi(whatever) should work there
2015-07-11 15:12:21	papna	Arnas: The first argument passed to a method is self, in that case the instance of Person you made
2015-07-11 15:12:29	skinnay	but you're passing it as an argument to the object creation
2015-07-11 15:12:34	skinnay	not as an argument to the method
2015-07-11 15:12:40	Awesomecase	^
2015-07-11 15:12:44	yonatan	Arnas: Person("Arnas") is supposed to do something with the string "Arnas". But what is it doing with it?
2015-07-11 15:13:00	papna	Arnas: http://codepad.org/Ahx8XyoH might help you understand in what way it's not working
2015-07-11 15:13:42	dimitrovskif	Arnas: Here is C and Python comparation http://codepad.org/lp3kPSGP
2015-07-11 15:13:43	yonatan	Arnas: When you have self.name = name, you're saying "From now on, this object's name is going to be (the parameter we were given, called name)"
2015-07-11 15:13:46	-->	ompaul (~ompaul@unaffiliated/ompaul) has joined #python
2015-07-11 15:13:49	WeiJunLi	cools vimrc?
2015-07-11 15:14:15	papna	Arnas: It's very similar to doing void sayHi(struct person *self) or void sayHi(struct person *self, char *name) or so forth
2015-07-11 15:14:24	papna	Arnas: methods always get the instance as the first argument
2015-07-11 15:14:38	<--	rejuvyesh (~rejuvyesh@unaffiliated/rejuvyesh) has quit (Ping timeout: 248 seconds)
2015-07-11 15:14:46	skinnay	yes, remember to make "self" the first argument for all methods
2015-07-11 15:15:05	<--	Behold (~behold@unaffiliated/beholdmyglory) has quit (Ping timeout: 256 seconds)
2015-07-11 15:15:14	papna	Arnas: Python automatically passes the instance when you call a method. You have to remember to define the function it will call appropriately
2015-07-11 15:15:15	skinnay	which allows you to use the . notation to access methods of an object
2015-07-11 15:15:33	yeryry	If you do (apersonhere).sayHi, the apersonhere gets put into the first parameter...
2015-07-11 15:15:40	theWhisperIn	sup guys
2015-07-11 15:15:42	<--	cosmint (~cosmint@c-73-7-0-119.hsd1.ga.comcast.net) has quit (Ping timeout: 250 seconds)
2015-07-11 15:16:19	-->	Programmer_ (~khaotic@unaffiliated/khaotic) has joined #python
2015-07-11 15:16:20	-->	IonutVan (~IonutVan@opensuse/member/IonutVan) has joined #python
2015-07-11 15:16:49	-->	Nizumzen (~Nizumzen@cpc1-reig5-2-0-cust251.6-3.cable.virginm.net) has joined #python
2015-07-11 15:17:17	dimitrovskif	Arnas: I think this one explains it the best http://codepad.org/odKKvbSw
2015-07-11 15:18:03	 *	papna slaps dimitrovskif with a large fish
2015-07-11 15:18:08	The-Compiler	dimitrovskif: you didn't pass *p to person_init though ;)
2015-07-11 15:18:13	yeryry	dimi.. yeah that
2015-07-11 15:18:14	papna	dimitrovskif: NO DEREFERENCING POINTERS YOU DON'T KNOW AREN'T NULL
2015-07-11 15:18:24	dimitrovskif	ooooooops
2015-07-11 15:18:30	The-Compiler	also why use malloc at all
2015-07-11 15:18:30	dimitrovskif	forgot to pass that p
2015-07-11 15:18:33	<--	thatprogrammer (~thatprogr@CPEd867d9d1921b-CM84948c579eb0.cpe.net.cable.rogers.com) has quit (Quit: thatprogrammer)
2015-07-11 15:18:39	--	irc: disconnected from server
2015-07-11 15:18:49	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 15:18:49	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 15:18:49	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 15:18:49	--	Channel #python: 1689 nicks (0 ops, 0 voices, 1689 normals)
2015-07-11 15:19:03	yeryry	To make it even more clear how much simpler things are in python? :P
2015-07-11 15:19:06	The-Compiler	struct Person p;  ;)
2015-07-11 15:19:07	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 15:19:15	papna	https://bpaste.net/show/c6abf5731a76 ish
2015-07-11 15:19:17	--	irc: disconnected from server
2015-07-11 15:19:23	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 15:19:23	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 15:19:23	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 15:19:23	--	Channel #python: 1689 nicks (0 ops, 0 voices, 1689 normals)
2015-07-11 15:19:31	The-Compiler	that looks more sane, yeah
2015-07-11 15:19:37	dimitrovskif	Yeah but in Python things are on the heap
2015-07-11 15:19:40	papna	Also, support reasonable storing of the char* data
2015-07-11 15:19:43	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 15:19:44	The-Compiler	I'll compile that
2015-07-11 15:19:47	papna	dimitrovskif: In Python, 10000000 things are different
2015-07-11 15:20:11	-->	Phantomas1 (~Phantomas@ubuntu/member/phantomas) has joined #python
2015-07-11 15:20:29	--	irc: disconnected from server
2015-07-11 15:20:34	-->	yuppie (~Space_Cas@unaffiliated/space-case/x-0038823) has joined #python
2015-07-11 15:20:34	--	Topic for #python is "Don't paste, use https://bpaste.net/+python | http://bit.ly/psf-coc | NO LOL | Tutorial: http://bit.ly/MCAhYx | New programmer? http://goo.gl/c170V | Specify 2.x or 3.x in your question | Find your local User Group: http://goo.gl/S1Zsq | #python-fr #python.de #python-es #python.tw #python.pl #python-br #python-nl #python-ir #python-fi #python.it #python-ro #python-india #python-dev"
2015-07-11 15:20:34	--	Topic set by papna on Fri, 16 Jan 2015 11:10:16
2015-07-11 15:20:34	--	Channel #python: 1690 nicks (0 ops, 0 voices, 1690 normals)
2015-07-11 15:20:34	***	Buffer Playback...
2015-07-11 15:20:34	Arnas	[15:20:31] papna, dimitrovskif well, the difference here is that it changes the value of name
2015-07-11 15:20:34	dimitrovskif	[15:20:32] you can't do p = 0; with your example, like you can do p = None in Python
2015-07-11 15:20:34	***	Playback Complete.
2015-07-11 15:20:40	<--	Phantomas (~Phantomas@ubuntu/member/phantomas) has quit (Disconnected by services)
2015-07-11 15:20:48	--	Phantomas1 is now known as Phantomas
2015-07-11 15:20:52	--	Channel created on Sun, 26 Nov 2006 00:42:41
2015-07-11 15:21:05	papna	Arnas: Can you clarify what youmean by that?
2015-07-11 15:21:18	<--	ompaul (~ompaul@unaffiliated/ompaul) has quit (Quit: and zebedee said its time for other stuff)
2015-07-11 15:21:53	The-Compiler	dimitrovskif: you also can't do  p = "foobar"  like you could in Python, but that's all beside the point
2015-07-11 15:22:17	-->	ndrei (~avo@83.142.149.227) has joined #python
2015-07-11 15:22:36	<--	NelleV (foobar@unaffiliated/nellev) has quit (Ping timeout: 264 seconds)
2015-07-11 15:22:37	dimitrovskif	The-Compiler: You can if p is *PyObject :D
2015-07-11 15:22:49	Arnas	papna, https://bpaste.net/show/2e681c99e0ac we change the value of name in the first example, i.e. after we call that function, after that the value of p.name will be different
2015-07-11 15:23:37	<--	fennesz (~fennesz@ppp-2-84-229-1.home.otenet.gr) has quit (Quit: Leaving)
2015-07-11 15:23:39	dimitrovskif	Arnas: that happens with Python too.
2015-07-11 15:23:39	yeryry	Same in both examples.. It's setting name of p
2015-07-11 15:23:50	-->	adjl (~adjl@cpc69048-oxfd25-2-0-cust923.4-3.cable.virginm.net) has joined #python
2015-07-11 15:24:15	dimitrovskif	Arnas: Except in C you have to manually initialize the value, in Python a initializer is a part of the class (not required though)
2015-07-11 15:24:18	papna	Arnas: I'm not sure what you are trying to convey. We wrote code to set name.
2015-07-11 15:24:29	<--	Arch-TK (Arch-TK@fsf/member/Arch-TK) has quit (Quit: I hate quit messages with fucking URLs in them.)
2015-07-11 15:27:18	<--	fission6 (~fission6@cpe-72-225-218-26.nyc.res.rr.com) has quit (Quit: fission6)
2015-07-11 15:27:20	Arnas	okay, why is this not working (I know that it should be print self.name)? https://bpaste.net/show/17e771aa4827
2015-07-11 15:27:28	Arnas	but I don't get it why it should be self.name
2015-07-11 15:27:32	-->	Arch-TK (Arch-TK@fsf/member/Arch-TK) has joined #python
2015-07-11 15:27:33	<--	BataLoopPak (~BataLoopP@unaffiliated/lucas-/x-9790181) has quit (Ping timeout: 256 seconds)
2015-07-11 15:27:55	--	irc: disconnected from server
